# Generated by Django 5.0.10 on 2025-10-31 07:47

import django.db.models.deletion
import djf_surveys.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('djf_surveys', '0022_alter_answer2_value'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='answer',
            name='file_value',
            field=models.FileField(blank=True, null=True, upload_to=djf_surveys.models.upload_survey_file, verbose_name='file'),
        ),
        migrations.AlterField(
            model_name='question',
            name='type_field',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Text'), (1, 'Number'), (2, 'Radio'), (3, 'Select'), (4, 'Multi Select'), (5, 'Text Area'), (6, 'URL'), (7, 'Email'), (8, 'Date'), (9, 'Rating'), (10, 'File Upload')], verbose_name='kiritish maydonining turi'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='nomi')),
                ('description', models.TextField(blank=True, default='', verbose_name="ta'rif")),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='tartib')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='djf_surveys.survey', verbose_name='survey')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': "Bo'limlar",
                'ordering': ['survey', 'ordering'],
                'unique_together': {('survey', 'ordering')},
            },
        ),
        migrations.CreateModel(
            name='BranchRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('condition_operator', models.CharField(choices=[('equals', 'Equals'), ('not_equals', 'Not Equals'), ('contains', 'Contains'), ('in', 'In (comma-separated values)')], max_length=20, verbose_name='operator')),
                ('condition_value', models.TextField(verbose_name='condition value')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Lower numbers are evaluated first', verbose_name='priority')),
                ('condition_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djf_surveys.question', verbose_name='condition question')),
                ('next_section', models.ForeignKey(blank=True, help_text='Leave empty to end survey', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_targets', to='djf_surveys.section', verbose_name='next section')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_rules', to='djf_surveys.section', verbose_name='section')),
            ],
            options={
                'verbose_name': 'branch rule',
                'verbose_name_plural': 'Branch rules',
                'ordering': ['section', 'priority'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='djf_surveys.section', verbose_name='section'),
        ),
        migrations.CreateModel(
            name='DraftResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='session key')),
                ('data', models.JSONField(default=dict, help_text='Draft response data as JSON', verbose_name='data')),
                ('expires_at', models.DateTimeField(verbose_name='expires at')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djf_surveys.survey', verbose_name='survey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('current_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djf_surveys.section', verbose_name='current section')),
            ],
            options={
                'verbose_name': 'draft response',
                'verbose_name_plural': 'Draft responses',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['user', 'survey'], name='djf_surveys_user_id_5a045a_idx'), models.Index(fields=['session_key', 'survey'], name='djf_surveys_session_f8c5cf_idx')],
            },
        ),
    ]
